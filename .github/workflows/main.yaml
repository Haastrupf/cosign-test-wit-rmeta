name: Build and Security Scan

on: [push, pull_request]

jobs:
  build-and-scan:
    runs-on: arc-runner-set-1

    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token

    name: build-image
    steps:
      - uses: actions/checkout@v4.1.3
        with:
          fetch-depth: 1
      - name: Install libcurl4-openssl-dev 
        run: |
          sudo apt-get update
          sudo apt-get install -y curl libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev -y
          sudo apt install build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev jq curl -y
          # Check for updates for ca-certificates
          sudo apt update -qq
          if [ $(apt list --upgradable 2>/dev/null | grep ca-certificates | wc -l) -gt 0 ]; then
            # Updates available, so update ca-certificates
            sudo apt install --only-upgrade -y ca-certificates
          else
            # No updates available or error occurred, so reinstall ca-certificates
            sudo apt install --reinstall -y ca-certificates
          fi
          # Update certificate authorities
          update-ca-certificates
          
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
         
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
         
      - id: docker_meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/sigstore/sample-honk
          tags: type=sha,format=long
        
      - name: Build and Push container images
        run: |
          DOCKER_BUILDKIT=0 docker build -t ghcr.io/${{ github.repository }}/chainguard:latest .
        # uses: docker/build-push-action@v5.3.0
        # id: build-and-push
        # with:
        #   platforms: linux/amd64,linux/arm/v7,linux/arm64
        #   push: true
        #   tags: ${{ steps.docker_meta.outputs.tags }}
       
      # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
      - name: Sign image with a key
        run: |
          cosign sign \
            --key ${COSIGN_PRIVATE_KEY} \
            --password ${COSIGN_PASSWORD} \
            ghcr.io/${{ github.repository }}/chainguard:latest
          # images=""
          # for tag in ${TAGS}; do
          #   images+="${tag}@${DIGEST} "
          # done
          # cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
        env:
          # TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          # DIGEST: ${{ steps.build-and-push.outputs.digest }}
       
      - name: Sign Image with Cosign
        run: docker push ghcr.io/${{ github.repository }}/chainguard:latest
         
      # - name: Sign the images with GitHub OIDC Token
      #   env:
      #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
      #     TAGS: ${{ steps.docker_meta.outputs.tags }}
      #   run: |
      #     images=""
      #     for tag in ${TAGS}; do
      #       images+="${tag}@${DIGEST} "
      #     done
      #     cosign sign --yes ${images}
